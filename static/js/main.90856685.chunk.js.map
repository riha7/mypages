{"version":3,"sources":["DataApintigration.js","DisplayBrowser.js","Get.js","SetTimeoutWithoutCancellngAPI.js","App.js","reportWebVitals.js","index.js"],"names":["DataApintigration","fetchData","a","setTimeout","console","log","axios","url","headers","accept","result","JSON","stringify","data","message","style","background","color","onClick","DisplayBrowser","useState","setdata","handleData","then","res","useEffect","className","map","item","index","id","username","email","Get","border","SetTimeoutWithoutCancellngAPI","fetchRqstApi","handleError","error","handled","timedout","makeRqest","timer","Promise","_","reject","race","padding","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90856685.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React from 'react'\r\n\r\nconst DataApintigration = () => {\r\n    const fetchData=async()=>{\r\n            setTimeout(() => {\r\n                console.log(\"taking long time to execute\");\r\n            }, 5000);\r\n            try {\r\n                const result = await axios({\r\n                    url:\"https://jsonplaceholder.typicode.com/todos/1\",\r\n                    headers:{\r\n                        accept:\"application/json\",\r\n                        \"content-type\":\"application/json\"\r\n                    }\r\n                });\r\n                console.log(\"success\",JSON.stringify(result.data,null,1))\r\n            } catch (error) {\r\n                console.log(\"fail!\",error.message);\r\n            }\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 style={{background:'green',color:'white'}}>API intigration start.......</h1>\r\n            <center>\r\n                <button onClick={()=>fetchData()}>CLikc to get data</button>\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataApintigration\r\n","import axios from 'axios'\r\nimport React, { useState,useEffect } from 'react'\r\n//https://jsonplaceholder.typicode.com/users\r\nconst DisplayBrowser = () => {\r\n    const [data, setdata] = useState([])\r\n    const  handleData=()=>{\r\n        axios({\r\n            url:'https://jsonplaceholder.typicode.com/users',\r\n            headers:{\r\n                accept:'application/json',\r\n                \"content-type\":\"application/json\"\r\n            }\r\n        }).then(res=>{\r\n            console.log(res);\r\n            setdata(res.data);\r\n        })\r\n    }\r\n    useEffect(() => {\r\n            handleData()\r\n    }, [])\r\n    return (\r\n        <div>\r\n           <h2>Display Data to Browser</h2>\r\n           <button onClick={()=>handleData()}>Click to show data</button>\r\n           <table className=\"table\">\r\n               <thead>\r\n                   <tr>\r\n                       <th>s.no</th>\r\n                       <th>username</th>\r\n                       <th>email</th>\r\n                   </tr>\r\n               </thead>\r\n               <tbody>\r\n                   {\r\n                       data.map((item,index)=>{\r\n                           return(\r\n                            <tr key={index}>\r\n                                <td>{item.id}</td>\r\n                                <td>{item.username}</td>\r\n                                <td>{item.email}</td>\r\n                            </tr>\r\n                           )\r\n                       })\r\n                   }\r\n               </tbody>\r\n           </table> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayBrowser\r\n","import React from 'react'\r\n\r\nconst Get = () => {\r\n    return (\r\n        <div>\r\n            <table className=\"table table-striped table-inverse table-responsive\" style={{border:'2px solid green'}}>\r\n                <thead className=\"thead-inverse\">\r\n                    <tr>\r\n                        <th>s.no</th>\r\n                        <th>name</th>\r\n                        <th>item</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>1</td>\r\n                            <td>hari</td>\r\n                            <td>idly</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>2</td>\r\n                            <td>hari</td>\r\n                            <td>idly</td>\r\n                        </tr>\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Get\r\n","import axios from 'axios';\r\nimport React from 'react'\r\n\r\nconst SetTimeoutWithoutCancellngAPI = () => {\r\n    const fetchRqstApi=async()=>{\r\n        const waittime=5000;\r\n        const handleError=error=>{\r\n                if(!error.handled){\r\n                    if (error.timedout) {\r\n                        console.log(\"TimedOut!\",error.timedout)\r\n                    } else {\r\n                        console.log(\"FAIL\",error.message);\r\n                        error.handled=true;\r\n                        throw error\r\n                    }\r\n                }\r\n        };\r\n        const makeRqest=async()=>{\r\n                try {\r\n                    const result = await axios({\r\n                        url:\"https://jsonplaceholder.typicode.com/todos/1\",\r\n                        headers:{\r\n                            accept:\"application/json\",\r\n                            \"content-type\":\"application/json\"\r\n                        }\r\n                    });\r\n                    console.log(\"Success!\",JSON.stringify(result.data,null,2));\r\n                } catch (error) {\r\n                    handleError(error)\r\n                }\r\n        };\r\n        const timer=new Promise((_,reject)=>setTimeout(reject,waittime,{timedout:'rqst taking to long time'}));\r\n        try {\r\n            await Promise.race([makeRqest(),timer])\r\n        } catch (error) {\r\n            handleError(error)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>How to set TimeOut() using axios without cancelling api Call..</h1>\r\n            <button style={{background:'green',color:'white',padding:'10px'}}  \r\n            onClick={()=>fetchRqstApi()}>ClickTOGetData</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetTimeoutWithoutCancellngAPI\r\n","import './App.css';\r\nimport DataApintigration from './DataApintigration';\r\nimport DisplayBrowser from './DisplayBrowser';\r\nimport Get from './Get';\r\nimport SetTimeoutWithoutCancellngAPI from './SetTimeoutWithoutCancellngAPI';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Main Page</h1>\r\n        <h3 style={{color:'tomato'}}>Login page ready to create</h3>\r\n        <h3 style={{color:'tomato'}}>Login page ready to create</h3>\r\n        <h2>Getdata added</h2>\r\n        <h2 style={{color:'orangered'}}>Registration page Created</h2>\r\n      <Get />\r\n      <DataApintigration />\r\n      <DisplayBrowser />\r\n      <SetTimeoutWithoutCancellngAPI />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}