{"version":3,"sources":["Getdata.js","GitPageBasic.js","App.js","reportWebVitals.js","index.js"],"names":["Getdata","fetchData","a","setTimeout","console","log","axios","url","headers","accept","result","JSON","stringify","data","message","onClick","GitPageBasic","useState","username","pwd","state","setstate","handleInput","e","newdata","target","name","value","onSubmit","preventDefault","type","onChange","App","className","style","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAgCeA,EA7BC,WACZ,IAAMC,EAAS,uCAAE,4BAAAC,EAAA,6DACE,IACfC,YAAW,WACPC,QAAQC,IAAI,kCAFD,KADF,kBAMYC,IAAM,CACvBC,IAAI,+CACJC,QAAQ,CACJC,OAAO,mBACP,eAAe,sBAVd,OAMHC,EANG,OAaTN,QAAQC,IAAI,WAAWM,KAAKC,UAAUF,EAAOG,KAAK,KAAK,IAb9C,gDAeTT,QAAQC,IAAI,kBAAkB,KAAMS,SAf3B,yDAAF,qDAkBf,OACI,8BACI,mCACI,yCACA,wBAAQC,QAAS,kBAAId,KAArB,qC,gBCIDe,EA3BM,WACjB,MAA0BC,mBAAS,CAC/BC,SAAS,GACTC,IAAI,KAFR,mBAAOC,EAAP,KAAcC,EAAd,KAIOH,EAAgBE,EAAhBF,SAASC,EAAOC,EAAPD,IACVG,EAAY,SAACC,GACX,IAAIC,EAAO,eAAOJ,GAClBI,EAAQD,EAAEE,OAAOC,MAAQH,EAAEE,OAAOE,MAClCN,EAASG,IAOjB,OACI,8BACI,uBAAMI,SAPK,SAACL,GAChBA,EAAEM,iBACF,IAAIL,EAAQ,CAAC,SAAWN,EAAS,IAAMC,GACvCf,QAAQC,IAAImB,IAIR,UACI,uBAAOM,KAAK,OAAOJ,KAAK,WAAWC,MAAOT,EAAUa,SAAUT,IADlE,IACkF,uBAC9E,uBAAOQ,KAAK,OAAOJ,KAAK,MAAMC,MAAOR,EAAKY,SAAUT,IACpD,iDCDDU,MAnBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,2CACA,oBAAIC,MAAO,CAACC,MAAM,UAAlB,wCACA,+BACE,sCACA,wCACA,yCAGN,cAAC,EAAD,IACA,cAAC,EAAD,UCLWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c61a51b4.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React from 'react'\r\n\r\nconst Getdata = () => {\r\n    const fetchData= async()=>{\r\n        const waitTime=5000;\r\n        setTimeout(()=>{\r\n            console.log('request to takiing long time');\r\n        },waitTime)\r\n        try {\r\n            const result = await axios({\r\n                url:\"https://jsonplaceholder.typicode.com/todos/1\",\r\n                headers:{\r\n                    accept:'application/json',\r\n                    \"content-type\":\"application/json\"\r\n                }\r\n            });\r\n            console.log(\"success!\",JSON.stringify(result.data,null,2))\r\n        } catch (error) {\r\n            console.log(\"error displayed\",error.message);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <center>\r\n                <p>get Data</p>\r\n                <button onClick={()=>fetchData()}>Click to Get Data</button>\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Getdata\r\n","import React,{useState} from 'react'\r\nimport Getdata from './Getdata';\r\n\r\nconst GitPageBasic = () => {\r\n    const [state, setstate] = useState({\r\n        username:'',\r\n        pwd:''\r\n    })\r\n    const {username,pwd} = state;\r\n    const handleInput=(e)=>{\r\n            let newdata = {...state}\r\n            newdata[e.target.name] = e.target.value\r\n            setstate(newdata)\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        let newdata={'username':username,'pwd':pwd}\r\n        console.log(newdata)\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" name=\"username\" value={username} onChange={handleInput} /> <br />\r\n                <input type=\"text\" name=\"pwd\" value={pwd} onChange={handleInput} />\r\n                <button>Click</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GitPageBasic\r\n","import './App.css';\r\nimport Getdata from './Getdata';\r\nimport GitPageBasic from './GitPageBasic';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Main Page</h1>\r\n        <h3 style={{color:'tomato'}}>Login page ready to create</h3>\r\n        <ul>\r\n          <li>idly</li>\r\n          <li>sambar</li>\r\n          <li>wada</li>\r\n        </ul>\r\n\r\n    <GitPageBasic />\r\n    <Getdata />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}